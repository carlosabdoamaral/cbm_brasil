// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: occurrence.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOccurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdFirefighter int64                     `protobuf:"varint,1,opt,name=id_firefighter,json=idFirefighter,proto3" json:"id_firefighter,omitempty"`
	IdAuthor      int64                     `protobuf:"varint,2,opt,name=id_author,json=idAuthor,proto3" json:"id_author,omitempty"`
	BannerX64     string                    `protobuf:"bytes,3,opt,name=banner_x64,json=bannerX64,proto3" json:"banner_x64,omitempty"`
	Title         string                    `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Location      *CreateOccurrenceLocation `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CreateOccurrence) Reset() {
	*x = CreateOccurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOccurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOccurrence) ProtoMessage() {}

func (x *CreateOccurrence) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOccurrence.ProtoReflect.Descriptor instead.
func (*CreateOccurrence) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOccurrence) GetIdFirefighter() int64 {
	if x != nil {
		return x.IdFirefighter
	}
	return 0
}

func (x *CreateOccurrence) GetIdAuthor() int64 {
	if x != nil {
		return x.IdAuthor
	}
	return 0
}

func (x *CreateOccurrence) GetBannerX64() string {
	if x != nil {
		return x.BannerX64
	}
	return ""
}

func (x *CreateOccurrence) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateOccurrence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOccurrence) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateOccurrence) GetLocation() *CreateOccurrenceLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type CreateOccurrenceLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cep          string  `protobuf:"bytes,1,opt,name=cep,proto3" json:"cep,omitempty"`
	Country      string  `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	State        string  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	City         string  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Neighborhood string  `protobuf:"bytes,5,opt,name=neighborhood,proto3" json:"neighborhood,omitempty"`
	Street       string  `protobuf:"bytes,6,opt,name=street,proto3" json:"street,omitempty"`
	PlaceNumber  int64   `protobuf:"varint,7,opt,name=place_number,json=placeNumber,proto3" json:"place_number,omitempty"`
	Complement   string  `protobuf:"bytes,8,opt,name=complement,proto3" json:"complement,omitempty"`
	Latitude     float32 `protobuf:"fixed32,9,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32 `protobuf:"fixed32,10,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *CreateOccurrenceLocation) Reset() {
	*x = CreateOccurrenceLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOccurrenceLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOccurrenceLocation) ProtoMessage() {}

func (x *CreateOccurrenceLocation) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOccurrenceLocation.ProtoReflect.Descriptor instead.
func (*CreateOccurrenceLocation) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOccurrenceLocation) GetCep() string {
	if x != nil {
		return x.Cep
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetNeighborhood() string {
	if x != nil {
		return x.Neighborhood
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetPlaceNumber() int64 {
	if x != nil {
		return x.PlaceNumber
	}
	return 0
}

func (x *CreateOccurrenceLocation) GetComplement() string {
	if x != nil {
		return x.Complement
	}
	return ""
}

func (x *CreateOccurrenceLocation) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateOccurrenceLocation) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type OccurrenceDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdAuthor      int64                      `protobuf:"varint,1,opt,name=id_author,json=idAuthor,proto3" json:"id_author,omitempty"`
	IdFirefighter int64                      `protobuf:"varint,2,opt,name=id_firefighter,json=idFirefighter,proto3" json:"id_firefighter,omitempty"`
	BannerX64     string                     `protobuf:"bytes,3,opt,name=banner_x64,json=bannerX64,proto3" json:"banner_x64,omitempty"`
	Title         string                     `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                     `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp     `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp     `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AcceptedAt    *timestamppb.Timestamp     `protobuf:"bytes,8,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	Location      *OccurrenceDetailsLocation `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	SoftDeleted   bool                       `protobuf:"varint,10,opt,name=soft_deleted,json=softDeleted,proto3" json:"soft_deleted,omitempty"`
}

func (x *OccurrenceDetails) Reset() {
	*x = OccurrenceDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccurrenceDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccurrenceDetails) ProtoMessage() {}

func (x *OccurrenceDetails) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccurrenceDetails.ProtoReflect.Descriptor instead.
func (*OccurrenceDetails) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{2}
}

func (x *OccurrenceDetails) GetIdAuthor() int64 {
	if x != nil {
		return x.IdAuthor
	}
	return 0
}

func (x *OccurrenceDetails) GetIdFirefighter() int64 {
	if x != nil {
		return x.IdFirefighter
	}
	return 0
}

func (x *OccurrenceDetails) GetBannerX64() string {
	if x != nil {
		return x.BannerX64
	}
	return ""
}

func (x *OccurrenceDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OccurrenceDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OccurrenceDetails) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OccurrenceDetails) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OccurrenceDetails) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *OccurrenceDetails) GetLocation() *OccurrenceDetailsLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *OccurrenceDetails) GetSoftDeleted() bool {
	if x != nil {
		return x.SoftDeleted
	}
	return false
}

type OccurrenceDetailsLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cep          string  `protobuf:"bytes,2,opt,name=cep,proto3" json:"cep,omitempty"`
	Country      string  `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	State        string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	City         string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Neighborhood string  `protobuf:"bytes,6,opt,name=neighborhood,proto3" json:"neighborhood,omitempty"`
	Street       string  `protobuf:"bytes,7,opt,name=street,proto3" json:"street,omitempty"`
	PlaceNumber  int64   `protobuf:"varint,8,opt,name=place_number,json=placeNumber,proto3" json:"place_number,omitempty"`
	Complement   string  `protobuf:"bytes,9,opt,name=complement,proto3" json:"complement,omitempty"`
	Latitude     float32 `protobuf:"fixed32,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32 `protobuf:"fixed32,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *OccurrenceDetailsLocation) Reset() {
	*x = OccurrenceDetailsLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccurrenceDetailsLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccurrenceDetailsLocation) ProtoMessage() {}

func (x *OccurrenceDetailsLocation) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccurrenceDetailsLocation.ProtoReflect.Descriptor instead.
func (*OccurrenceDetailsLocation) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{3}
}

func (x *OccurrenceDetailsLocation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OccurrenceDetailsLocation) GetCep() string {
	if x != nil {
		return x.Cep
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetNeighborhood() string {
	if x != nil {
		return x.Neighborhood
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetPlaceNumber() int64 {
	if x != nil {
		return x.PlaceNumber
	}
	return 0
}

func (x *OccurrenceDetailsLocation) GetComplement() string {
	if x != nil {
		return x.Complement
	}
	return ""
}

func (x *OccurrenceDetailsLocation) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *OccurrenceDetailsLocation) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type EditOccurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdAuthor    int64                   `protobuf:"varint,2,opt,name=id_author,json=idAuthor,proto3" json:"id_author,omitempty"`
	BannerX64   string                  `protobuf:"bytes,3,opt,name=banner_x64,json=bannerX64,proto3" json:"banner_x64,omitempty"`
	Title       string                  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description string                  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Location    *EditOccurrenceLocation `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *EditOccurrence) Reset() {
	*x = EditOccurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditOccurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditOccurrence) ProtoMessage() {}

func (x *EditOccurrence) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditOccurrence.ProtoReflect.Descriptor instead.
func (*EditOccurrence) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{4}
}

func (x *EditOccurrence) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditOccurrence) GetIdAuthor() int64 {
	if x != nil {
		return x.IdAuthor
	}
	return 0
}

func (x *EditOccurrence) GetBannerX64() string {
	if x != nil {
		return x.BannerX64
	}
	return ""
}

func (x *EditOccurrence) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditOccurrence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditOccurrence) GetLocation() *EditOccurrenceLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type EditOccurrenceLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cep          string  `protobuf:"bytes,2,opt,name=cep,proto3" json:"cep,omitempty"`
	Country      string  `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	State        string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	City         string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Neighborhood string  `protobuf:"bytes,6,opt,name=neighborhood,proto3" json:"neighborhood,omitempty"`
	Street       string  `protobuf:"bytes,7,opt,name=street,proto3" json:"street,omitempty"`
	PlaceNumber  int64   `protobuf:"varint,8,opt,name=place_number,json=placeNumber,proto3" json:"place_number,omitempty"`
	Complement   string  `protobuf:"bytes,9,opt,name=complement,proto3" json:"complement,omitempty"`
	Latitude     float32 `protobuf:"fixed32,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float32 `protobuf:"fixed32,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *EditOccurrenceLocation) Reset() {
	*x = EditOccurrenceLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditOccurrenceLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditOccurrenceLocation) ProtoMessage() {}

func (x *EditOccurrenceLocation) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditOccurrenceLocation.ProtoReflect.Descriptor instead.
func (*EditOccurrenceLocation) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{5}
}

func (x *EditOccurrenceLocation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditOccurrenceLocation) GetCep() string {
	if x != nil {
		return x.Cep
	}
	return ""
}

func (x *EditOccurrenceLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *EditOccurrenceLocation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *EditOccurrenceLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *EditOccurrenceLocation) GetNeighborhood() string {
	if x != nil {
		return x.Neighborhood
	}
	return ""
}

func (x *EditOccurrenceLocation) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *EditOccurrenceLocation) GetPlaceNumber() int64 {
	if x != nil {
		return x.PlaceNumber
	}
	return 0
}

func (x *EditOccurrenceLocation) GetComplement() string {
	if x != nil {
		return x.Complement
	}
	return ""
}

func (x *EditOccurrenceLocation) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *EditOccurrenceLocation) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateOccurrenceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOccurrence  int64 `protobuf:"varint,1,opt,name=id_occurrence,json=idOccurrence,proto3" json:"id_occurrence,omitempty"`
	IdFirefighter int64 `protobuf:"varint,2,opt,name=id_firefighter,json=idFirefighter,proto3" json:"id_firefighter,omitempty"`
}

func (x *UpdateOccurrenceStatus) Reset() {
	*x = UpdateOccurrenceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_occurrence_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOccurrenceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOccurrenceStatus) ProtoMessage() {}

func (x *UpdateOccurrenceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_occurrence_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOccurrenceStatus.ProtoReflect.Descriptor instead.
func (*UpdateOccurrenceStatus) Descriptor() ([]byte, []int) {
	return file_occurrence_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateOccurrenceStatus) GetIdOccurrence() int64 {
	if x != nil {
		return x.IdOccurrence
	}
	return 0
}

func (x *UpdateOccurrenceStatus) GetIdFirefighter() int64 {
	if x != nil {
		return x.IdFirefighter
	}
	return 0
}

var File_occurrence_proto protoreflect.FileDescriptor

var file_occurrence_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x64, 0x46, 0x69, 0x72, 0x65, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x78, 0x36, 0x34, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x58, 0x36, 0x34,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa9, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x65, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x68,
	0x6f, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xc2, 0x03, 0x0a,
	0x11, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x64, 0x46, 0x69, 0x72, 0x65, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x78, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x58, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x22, 0xba, 0x02, 0x0a, 0x19, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x65,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x68, 0x6f, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xcf,
	0x01, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x78, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x58, 0x36, 0x34, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb7, 0x02, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x65, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x68, 0x6f, 0x6f,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x64, 0x4f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x72, 0x65, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x69, 0x64, 0x46, 0x69, 0x72, 0x65, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72,
	0x32, 0xb9, 0x03, 0x0a, 0x10, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x09, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x0e,
	0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x09,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_occurrence_proto_rawDescOnce sync.Once
	file_occurrence_proto_rawDescData = file_occurrence_proto_rawDesc
)

func file_occurrence_proto_rawDescGZIP() []byte {
	file_occurrence_proto_rawDescOnce.Do(func() {
		file_occurrence_proto_rawDescData = protoimpl.X.CompressGZIP(file_occurrence_proto_rawDescData)
	})
	return file_occurrence_proto_rawDescData
}

var file_occurrence_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_occurrence_proto_goTypes = []interface{}{
	(*CreateOccurrence)(nil),          // 0: proto.CreateOccurrence
	(*CreateOccurrenceLocation)(nil),  // 1: proto.CreateOccurrenceLocation
	(*OccurrenceDetails)(nil),         // 2: proto.OccurrenceDetails
	(*OccurrenceDetailsLocation)(nil), // 3: proto.OccurrenceDetailsLocation
	(*EditOccurrence)(nil),            // 4: proto.EditOccurrence
	(*EditOccurrenceLocation)(nil),    // 5: proto.EditOccurrenceLocation
	(*UpdateOccurrenceStatus)(nil),    // 6: proto.UpdateOccurrenceStatus
	(*timestamppb.Timestamp)(nil),     // 7: google.protobuf.Timestamp
	(*Id)(nil),                        // 8: proto.Id
	(*StatusResponse)(nil),            // 9: proto.StatusResponse
}
var file_occurrence_proto_depIdxs = []int32{
	7,  // 0: proto.CreateOccurrence.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: proto.CreateOccurrence.location:type_name -> proto.CreateOccurrenceLocation
	7,  // 2: proto.OccurrenceDetails.created_at:type_name -> google.protobuf.Timestamp
	7,  // 3: proto.OccurrenceDetails.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 4: proto.OccurrenceDetails.accepted_at:type_name -> google.protobuf.Timestamp
	3,  // 5: proto.OccurrenceDetails.location:type_name -> proto.OccurrenceDetailsLocation
	5,  // 6: proto.EditOccurrence.location:type_name -> proto.EditOccurrenceLocation
	0,  // 7: proto.OccurreceService.Create:input_type -> proto.CreateOccurrence
	8,  // 8: proto.OccurreceService.GetById:input_type -> proto.Id
	4,  // 9: proto.OccurreceService.EditById:input_type -> proto.EditOccurrence
	8,  // 10: proto.OccurreceService.SoftDeleteById:input_type -> proto.Id
	6,  // 11: proto.OccurreceService.AcceptById:input_type -> proto.UpdateOccurrenceStatus
	6,  // 12: proto.OccurreceService.RefuseById:input_type -> proto.UpdateOccurrenceStatus
	6,  // 13: proto.OccurreceService.CancelById:input_type -> proto.UpdateOccurrenceStatus
	9,  // 14: proto.OccurreceService.Create:output_type -> proto.StatusResponse
	2,  // 15: proto.OccurreceService.GetById:output_type -> proto.OccurrenceDetails
	2,  // 16: proto.OccurreceService.EditById:output_type -> proto.OccurrenceDetails
	9,  // 17: proto.OccurreceService.SoftDeleteById:output_type -> proto.StatusResponse
	9,  // 18: proto.OccurreceService.AcceptById:output_type -> proto.StatusResponse
	9,  // 19: proto.OccurreceService.RefuseById:output_type -> proto.StatusResponse
	9,  // 20: proto.OccurreceService.CancelById:output_type -> proto.StatusResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_occurrence_proto_init() }
func file_occurrence_proto_init() {
	if File_occurrence_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_occurrence_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOccurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOccurrenceLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccurrenceDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccurrenceDetailsLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditOccurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditOccurrenceLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_occurrence_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOccurrenceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_occurrence_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_occurrence_proto_goTypes,
		DependencyIndexes: file_occurrence_proto_depIdxs,
		MessageInfos:      file_occurrence_proto_msgTypes,
	}.Build()
	File_occurrence_proto = out.File
	file_occurrence_proto_rawDesc = nil
	file_occurrence_proto_goTypes = nil
	file_occurrence_proto_depIdxs = nil
}
